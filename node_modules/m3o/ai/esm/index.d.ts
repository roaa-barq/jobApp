export declare class AiService {
    private client;
    constructor(token: string);
    complete(request: CompleteRequest): Promise<CompleteResponse>;
    edit(request: EditRequest): Promise<EditResponse>;
    generate(request: GenerateRequest): Promise<GenerateResponse>;
    moderate(request: ModerateRequest): Promise<ModerateResponse>;
}
export interface CompleteRequest {
    text?: string;
}
export interface CompleteResponse {
    text?: string;
}
export interface EditRequest {
    instruction?: string;
    text?: string;
}
export interface EditResponse {
    text?: string;
}
export interface GenerateRequest {
    limit?: number;
    size?: string;
    text?: string;
}
export interface GenerateResponse {
    images?: Image[];
}
export interface Image {
    base64?: string;
    url?: string;
}
export interface ModerateRequest {
    text?: string;
}
export interface ModerateResponse {
    categories?: {
        [key: string]: boolean;
    };
    flagged?: boolean;
    scores?: {
        [key: string]: number;
    };
}
